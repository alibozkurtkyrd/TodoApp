+ one to many iliskiside user silince todo yapısıda silinmeli

+ dto da  user + todo listesini birlikte getirmelisin

+ Mapping olustur (TodoMap ile UserMap)

    https://youtu.be/ZgB9q5aaS-4

    mapping olusturuldu

+ email adresi unique yapıldı
    kaynak: https://stackoverflow.com/questions/21573550/setting-unique-constraint-with-fluent-api
            https://www.youtube.com/watch?v=xh7Ngo4vszY


+ dto şimdilik geçici olusturuyorum ancak onunla ilgili bir video izlemelisin            

    dto da datetime i postman ile denemelisin (henüz yapamadım)

        datetime class i nin public DateTime(int year, int month, int day); seklinde constructor i var
        createTodoDto da yıl mont ve day i ayrı ayrı int alıp TodoController icinde olsuturuabilirsin

        * dto BAŞARILI şekilde olusturuldu

    + TodoController daki CreateTodo methodunda geriye TODO objesi dönüyoruz bunun yerine bir dto dönsek daha
        iyi olur. Dto ismi getTodo olsun

    + User icin bir dto olusturmalıyız  örnegin login yapınca password görülmesin 

        ayrıca login yapınca Todos listeside görülmüyor
        sorun ÇÖZÜLDÜ

    + TodoController de getby user id ve ve get by id şeklinde iki adet method olusturmalıyız   

    ** ONEMLI : GetTodos methodunda user name i de getirmelisn

            - userController de olusturacagın getUser ile bunu halledebilirisn (getUserName de olaiblir)
            - ya da iki tabloyu birleştimek için join olaiblir
            - burada left ya da right join yapmalısın(normal join olmaz) : https://youtu.be/K_NTrNO5ADY  (dk 4.30 da nedeni açıklanmış)

            ** ÇÖZÜLDÜ

            ** AYRICA bu methodu tarihe göre de sıralayabilrsin (dealine ini en yakın olan en üstte olur)
                ÇÖZÜLDÜ

+ user tablosunda update işlemi
    bir userda birden çok todo list olabiliyor(one to many) GUI olmadan user üzerinden TODO list i update etmek güç duruyor

    todo icin yapılana update;
        kullanıcı user_id özelliğini degistirebilir ancak kullanıcı database deki mevcut olan users dan birini seçmeli aksi halledebilirisn
       NotFound hatası dönecek
        BASARALI SEKİDE UYGULANDI

+ user icin getall methodunda ne olmalı:
    id, isim ve soyisim (birleşik), email adresi ve todo list id ve todo taskname olsun olmalı bunu icin bir dto olustur

        ** todo list ve taskname i almak icin ÇOK ZAMAN HARCADIM. Nested for each yapısı kullandım
+ user update   
    burada password u update ederekn Tools/PasswordEncripiton sınıfını tekrar kullanmalsıın

    update işlemi TAMAMLANDI

+ silme işlemi tamamlandı
    not: get by user id seklinde bir method userControlelr'de bulunmuyor onu eklemek istemedim çünkü login ile o bilgilere erisebiliyoruz

*** Repository pattern kullanmadan CRUD işlemleri tamamlandı 
    bir daha ki adım Repository pattern olusturmak onu ayrı bir branch da yapmalısın


--------------

+ Repository pattern 
    kaynak: https://www.codeguru.com/csharp/repository-pattern-c-sharp/



            https://dotnettutorials.net/lesson/repository-design-pattern-csharp/

                ef nin direkt database ile iletişim kurmamalı çünkü duplication oluyor

                Repository pattern sayesinde controllerde query ya da data'ya ulaşma ile ilgili bir code olmamış oluyor

            https://medium.com/devopsturkiye/net-core-3-1-katmanl%C4%B1-mimari-ve-generic-repository-pattern-1-87990f1da3e5

            https://youtu.be/yOfo7EhEAYw

            https://youtu.be/-LAeEQSfOQk   (bu video'nun playlist inide göz at)

                  github hesabı: https://github.com/teddysmithdev/pokemon-review-api
        
        Ayrıca:

            kod-uygulama/repository-pattern/udemy-indirilenler/ kısmında bak

            https://codewithmukesh.com/blog/repository-pattern-in-aspnet-core/





+ TodoController içersinde users tablosunu kullanmaya gerek var mı
    gerek yok gibi duruyor çünkü Todo  simple navigation property olan user var

    getTodoByUserId, CreateTodo ve UpdateTodo metodlarında Users tablosuna baglanılmış


** CreateTodo ve UpdateTodo methodları (TodoController)
    CreateTodo methodunda kullanıcının bir user id girmesi şart koşulmuş ancak zorunlu degil. Daha sonrada başka bir user a assign edebiliriz
    ayrıca UpdateTodo'da da benzer bir sorun;
        // proplem ancak bu durumd null degere sahip olan Todo'ları güncelleyemiyoruz
    
    getTodoByUserId
        updateTodo daki user in null olma durumu buraya eklenmeli çünkü bu methodda userId ile sorgu yapıyor null ise hata dönsün
    o yüzden orası DÜZELTİLMELİ

    
+ GenericRepository sınıfını silmelisin
    Data/Concrete folder i altında

+ userLogin parametre olarak userDto alsa daha iyi olur


Register işlemini getby id'i kullandıktan sonra yap